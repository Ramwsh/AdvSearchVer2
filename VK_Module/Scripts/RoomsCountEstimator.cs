using System.Linq;
using System.Text.RegularExpressions;

namespace VK_Module.Scripts
{
    public class RoomsCountEstimator
    {
        #region array of patterns for regular expression comparison
        string[] roomPatterns = {
                @"6 КОМНАТНУЮ",
                @"5 КОМНАТНУЮ",
                @"4 КОМНАТНУЮ",
                @"3 КОМНАТНУЮ",
                @"2 КОМНАТНУЮ",
                @"1 КОМНАТНУЮ",
                @"6 КОМН",
                @"5 КОМН",
                @"4 КОМН",
                @"3 КОМН",
                @"2 КОМН",
                @"1 КОМН",
                @"6Х-КОМ",
                @"5Х-КОМ",
                @"4Х-КОМ",
                @"3Х-КОМ",
                @"2Х-КОМ",
                @"1Х-КОМ",
                @"6 КОМНАТН",
                @"5 КОМНАТН",
                @"4 КОМНАТН",
                @"3 КОМНАТН",
                @"2 КОМНАТН",
                @"1 КОМНАТН",
                @"Количество комнат: 6",
                @"Количество комнат: 5",
                @"Количество комнат: 4",
                @"Количество комнат: 3",
                @"Количество комнат: 2",
                @"Количество комнат: 1",
                @"Кол-во комнат:6",
                @"Кол-во комнат:5",
                @"Кол-во комнат:4",
                @"Кол-во комнат:3",
                @"Кол-во комнат:2",
                @"Кол-во комнат:1",
                @"Кол-во комнат: 5",
                @"Кол-во комнат: 4",
                @"Кол-во комнат: 3",
                @"Кол-во комнат: 2",
                @"Кол-во комнат: 1",
                @"шести комн",
                @"пяти комн",
                @"четыр комн",
                @"трёх комн",
                @"трех комн",
                @"двух комн",
                @"одно комн",
                @"одна комн",
                @"шестикомн",
                @"пятикомн",
                @"четырехкомн",
                @"трехкомн",
                @"трёхкомн",
                @"двухкомн",
                @"однокомн",
                @"однакомн",
                @"две комн",
                @"три комн",
                @"четыре комн",
                @"пять комн",
                @"шесть комн",
                @"6 комн",
                @"5 комн",
                @"4 комн",
                @"3 комн",
                @"2 комн",
                @"1 комн",
                @"6 ком",
                @"5 ком",
                @"4 ком",
                @"3 ком",
                @"2 ком",
                @"1 ком",
                @"6к(\s)",
                @"5к(\s)",
                @"4к(\s)",
                @"3к(\s)",
                @"2к(\s)",
                @"1к(\s)",
                @"6-комн",
                @"5-комн",
                @"4-комн",
                @"3-комн",
                @"2-комн",
                @"1-комн",
                @"6-ком",
                @"5-ком",
                @"4-ком",
                @"3-ком",
                @"2-ком",
                @"1-ком",
                @"6-?ком",
                @"5-?ком",
                @"4-?ком",
                @"3-?ком",
                @"2-?ком",
                @"1-?ком",
                @"6-х",
                @"5-х",
                @"4-х",
                @"3-х",
                @"2-х",
                @"1-х",
                @"4х ком",
                @"3х ком",
                @"2х ком",
                @"4х к",
                @"3х к",
                @"2х к",
                @"4х кмн",
                @"3х кмн",
                @"2х кмн",
                @"6-к(\s)",
                @"5-к(\s)",
                @"4-к(\s)",
                @"3-к(\s)",
                @"2-к(\s)",
                @"1-к(\s)",
                @"6(\s)спаль",
                @"5(\s)спаль",
                @"4(\s)спаль",
                @"3(\s)спаль",
                @"2(\s)спаль",
                @"1(\s)спаль",
                @"(\d)(\s)комн",
                @"(\d+)-?ком",
                @"-?комнат:(\s)(\d)",
                @"(\d+)?к?о?м?н?а?т:?(\d+)",
                @"(\d+)?к?о?м?н?а?т:?(\s)(\d+)"
            };
        #endregion

        public string Estimate(string text)
        {
            foreach (string pattern in roomPatterns)
            {
                Match match = Regex.Match(text, pattern, RegexOptions.IgnoreCase);
                if (match.Success)
                {
                    string temp = string.Empty;
                    foreach (var m in match.Groups)
                    {
                        temp += m;
                    }
                    if (temp.Contains("одно"))
                    {
                        return "1";
                    }
                    if (temp.Contains("двух"))
                    {
                        return "2";
                    }
                    if (temp.Contains("трёх"))
                    {
                        return "3";
                    }
                    if (temp.Contains("трех"))
                    {
                        return "3";
                    }
                    if (temp.Contains("четыр"))
                    {
                        return "4";
                    }
                    if (temp.Contains("пяти"))
                    {
                        return "5";
                    }
                    if (temp.Contains("шести"))
                    {
                        return "6";
                    }
                    if (temp.Contains("одна"))
                    {
                        return "1";
                    }
                    if (temp.Contains("две"))
                    {
                        return "2";
                    }
                    if (temp.Contains("три"))
                    {
                        return "3";
                    }
                    if (temp.Contains("четыре"))
                    {
                        return "4";
                    }
                    if (temp.Contains("пять"))
                    {
                        return "5";
                    }
                    if (temp.Contains("шесть"))
                    {
                        return "6";
                    }
                    string result = string.Join("", temp.Where(c => char.IsDigit(c)).ToArray());
                    if (result.Length > 1 || string.IsNullOrEmpty(result) || result == "")
                    {
                        return "Не обнаружено";
                    }
                    return result;
                }
            }
            return "Не обнаружено";
        }
    }
}
